
package servereditor;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalpak44
 */
public class MainForm extends javax.swing.JFrame {

    private Server server;
    public MainForm() {
        initComponents();
        serverStatus.setVisible(false);
        getUsers();
        getProducts();
        getDiscounts();
        setUserInCombo();

    }
    
    private void getDiscounts(){
        try{
            DataBase db = new DataBase();
            Connection con = db.getConnection();
            String query ="SELECT * FROM discounts;";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(query);
            System.out.println("get discounts:");
            
            DefaultTableModel tm = (DefaultTableModel) discountTable.getModel();
            
            while(rs.next()){
                tm.addRow(new Object[] {new Integer(rs.getInt("amount_sum")),new Integer(rs.getInt("discount_sum")),new Boolean(false)});
            }
            
        }catch(Exception e){
            System.err.println("getUsers Exception: "+e);
        }
    }

    private void getProducts(){
        try{
            DataBase db = new DataBase();
            Connection con = db.getConnection();
            String query ="SELECT * FROM products;";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(query);
            System.out.println("get products:");
            
            DefaultTableModel tm = (DefaultTableModel) productTable.getModel();
            
            while(rs.next()){
                String user = rs.getString("p_id")+" "+rs.getString("product_name")+" "+rs.getString("brand")+" "+rs.getString("model")+" "+rs.getString("quality")+" "+rs.getString("available")+" "+rs.getString("price");
                System.out.println(user);
                tm.addRow(new Object[] {new Integer(rs.getInt("p_id")),
                    new String(rs.getString("product_name")),
                    new String(rs.getString("brand")),
                    new String(rs.getString("model")),
                    new String(rs.getString("quality")),
                    new Double(rs.getDouble("price")),
                    new Integer(rs.getInt("available")),
                    new Boolean(false)});
                
            }
            
        }catch(Exception e){
            System.err.println("getUsers Exception: "+e);
        }
    }
    private void setUserInCombo(){
        try{
            DataBase db = new DataBase();
            Connection con = db.getConnection();
            String query ="SELECT * FROM users;";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(query);
            System.out.println("get users:");
           
            while(rs.next()){///***********************************
                String user = rs.getString("login");
                userCombobox.addItem(user);
                
            }
            
        }catch(Exception e){
            System.err.println("getUsers Exception: "+e);
        }
    }
    private void getUsers(){
        try{
            DataBase db = new DataBase();
            Connection con = db.getConnection();
            String query ="SELECT * FROM users;";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(query);
            System.out.println("get users:");
            
            DefaultTableModel tm = (DefaultTableModel) userTable.getModel();
            
            while(rs.next()){
                String user = rs.getString("user_id")+" "+rs.getString("login")+" "+rs.getString("name_user")+" "+rs.getString("last_name");
                System.out.println(user);
                tm.addRow(new Object[] {new Integer(rs.getInt("user_id")),new String(rs.getString("login")),new String(rs.getString("name_user")),new String(rs.getString("last_name")),new Boolean(false)});
            }
            
        }catch(Exception e){
            System.err.println("getUsers Exception: "+e);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel14 = new javax.swing.JPanel();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        addUserButton = new javax.swing.JButton();
        editUserButton = new javax.swing.JButton();
        removeUserButton = new javax.swing.JButton();
        refreshUserButton = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        editProductButton = new javax.swing.JButton();
        removeProductButton = new javax.swing.JButton();
        refreshProductsButton = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        discountTable = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        removeDiscount = new javax.swing.JButton();
        refreshDiscounts = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        shipingTable = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        viewUserSh = new javax.swing.JButton();
        userCombobox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        RefreshUsersInCombo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        serverStatus = new javax.swing.JLabel();
        mainMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jSeparator1))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "login", "first name", "last name", "select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userTable);

        addUserButton.setText("add");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        editUserButton.setText("edit");
        editUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserButtonActionPerformed(evt);
            }
        });

        removeUserButton.setText("remove");
        removeUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserButtonActionPerformed(evt);
            }
        });

        refreshUserButton.setText("refresh");
        refreshUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addUserButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editUserButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeUserButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshUserButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab("Users", jPanel3);

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "pName", "Brand", "Model", "Quality", "Price", "Available", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(productTable);

        jButton4.setText("add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        editProductButton.setText("edit");
        editProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProductButtonActionPerformed(evt);
            }
        });

        removeProductButton.setText("remove");
        removeProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductButtonActionPerformed(evt);
            }
        });

        refreshProductsButton.setText("refresh");
        refreshProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshProductsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(editProductButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(removeProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refreshProductsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editProductButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeProductButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshProductsButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab("Products", jPanel15);

        discountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "min-sum", "discount", "select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(discountTable);

        jButton10.setText("add");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        removeDiscount.setText("remove");
        removeDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDiscountActionPerformed(evt);
            }
        });

        refreshDiscounts.setText("refresh");
        refreshDiscounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshDiscountsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeDiscount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshDiscounts, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeDiscount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshDiscounts)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(401, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );

        jTabbedPane6.addTab("Discounts", jPanel17);

        shipingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "pName", "Brand", "Model", "Quality", "Price", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(shipingTable);

        viewUserSh.setText("View");
        viewUserSh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewUserShActionPerformed(evt);
            }
        });

        jLabel1.setText("USER:");

        RefreshUsersInCombo.setText("Refresh");
        RefreshUsersInCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshUsersInComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewUserSh, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(userCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(RefreshUsersInCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addComponent(userCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewUserSh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RefreshUsersInCombo)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab("Buying", jPanel19);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane6)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane6))
        );

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        serverStatus.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serverStatus)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(serverStatus))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jMenu1.setText("Program");

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        mainMenu.add(jMenu1);

        about.setText("About");

        jMenuItem3.setText("About");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        about.add(jMenuItem3);

        mainMenu.add(about);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        // TODO add your handling code here:
        new AddUser();
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void refreshUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshUserButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) userTable.getModel();
        tm.setRowCount(0);
        getUsers();
    }//GEN-LAST:event_refreshUserButtonActionPerformed

    private void removeUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) userTable.getModel();
        boolean wasSelected=false;
        for(int i=0;i<tm.getRowCount();i++){
            if((Boolean)tm.getValueAt(i, 4)==true) {
                wasSelected=true;
                break;
            }
        }
        if(wasSelected==true){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want remove selected users?", "title",dialogButton);
            if(dialogResult==0){
                try{
                    DataBase db = new DataBase();
                    String query;
                    Connection con = db.getConnection();
                    
                    for(int i=0;i<tm.getRowCount();i++){
                        if((Boolean)tm.getValueAt(i, 4)==true){
                            
                            query = "DELETE FROM  `users` WHERE  `login` = '"+(String)tm.getValueAt(i, 1)+"';";
                            System.out.println(query);
                            Statement statement = con.createStatement();
                            statement.executeUpdate(query);
                        }
                    }
                    
                    JOptionPane.showMessageDialog(this, "Removing succesful.","Succes", JOptionPane.INFORMATION_MESSAGE);
                    tm.setRowCount(0);
                    getUsers();
                    
                }catch(Exception e){
                    System.err.println("getName Exception: "+e);
                    JOptionPane.showMessageDialog(this, "Delete User Exception: "+e,"Error", JOptionPane.ERROR_MESSAGE);
                } 
            }
        }else{
            JOptionPane.showMessageDialog(this, "Nothing selected for deletion.","Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removeUserButtonActionPerformed

    private void editUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) userTable.getModel();
        for(int i=0;i<tm.getRowCount();i++){
            if((Boolean)tm.getValueAt(i, 4)){
                new EditUser((String)tm.getValueAt(i, 1));
            }
        }
    }//GEN-LAST:event_editUserButtonActionPerformed

    private void removeProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) productTable.getModel();
        boolean wasSelected=false;
        for(int i=0;i<tm.getRowCount();i++){
            if((Boolean)tm.getValueAt(i, 7)==true) {
                wasSelected=true;
                break;
            }
        }
        if(wasSelected==true){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want remove selected product?", "title",dialogButton);
            if(dialogResult==0){
                try{
                    DataBase db = new DataBase();
                    String query;
                    Connection con = db.getConnection();
                    
                    for(int i=0;i<tm.getRowCount();i++){
                        if((Boolean)tm.getValueAt(i, 7)==true){
                            
                            query = "DELETE FROM  `products` WHERE  `p_id` = '"+(Integer)tm.getValueAt(i, 0)+"';";
                            System.out.println(query);
                            Statement statement = con.createStatement();
                            statement.executeUpdate(query);
                        }
                    }
                    
                    JOptionPane.showMessageDialog(this, "Removing succesful.","Succes", JOptionPane.INFORMATION_MESSAGE);
                    tm.setRowCount(0);
                    getProducts();                    
                }catch(Exception e){
                    System.err.println("getName Exception: "+e);
                    JOptionPane.showMessageDialog(this, "Delete User Exception: "+e,"Error", JOptionPane.ERROR_MESSAGE);
                } 
            }
        }else{
            JOptionPane.showMessageDialog(this, "Nothing selected for deletion.","Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_removeProductButtonActionPerformed

    private void refreshProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshProductsButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) productTable.getModel();
        tm.setRowCount(0);
        getProducts();  
        
    }//GEN-LAST:event_refreshProductsButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        new AddProduct();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        server = new Server();
        server.startServer();
        startButton.setVisible(false);
        serverStatus.setText("Started");
        serverStatus.setVisible(true);

    }//GEN-LAST:event_startButtonActionPerformed

    private void editProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProductButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) productTable.getModel();
        for(int i=0;i<tm.getRowCount();i++){
            if((Boolean)tm.getValueAt(i, 7)){
                new EditProducts((Integer)tm.getValueAt(i, 0));
            }
        }
    }//GEN-LAST:event_editProductButtonActionPerformed

    private void removeDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDiscountActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) discountTable.getModel();
        boolean wasSelected=false;
        for(int i=0;i<tm.getRowCount();i++){
            if((Boolean)tm.getValueAt(i, 2)==true) {
                wasSelected=true;
                break;
            }
        }
        if(wasSelected==true){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want remove selected discount?", "title",dialogButton);
            if(dialogResult==0){
                try{
                    DataBase db = new DataBase();
                    String query;
                    Connection con = db.getConnection();
                    
                    for(int i=0;i<tm.getRowCount();i++){
                        if((Boolean)tm.getValueAt(i, 2)==true){
                            
                            query = "DELETE FROM  discounts WHERE  amount_sum = '"+(Integer)tm.getValueAt(i, 0)+"' OR discount_sum = '"+(Integer)tm.getValueAt(i, 1)+"';";
                            System.out.println(query);
                            
                            Statement statement = con.createStatement();
                            statement.executeUpdate(query);
                        }
                    }
                    
                    JOptionPane.showMessageDialog(this, "Removing succesful.","Succes", JOptionPane.INFORMATION_MESSAGE);
                    tm.setRowCount(0);
                    getDiscounts();                   
                }catch(Exception e){
                    System.err.println(e);

                } 
            }
        }else{
            JOptionPane.showMessageDialog(this, "Nothing selected for deletion.","Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removeDiscountActionPerformed

    private void refreshDiscountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshDiscountsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) discountTable.getModel();
        tm.setRowCount(0);
        getDiscounts(); 
    }//GEN-LAST:event_refreshDiscountsActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        new addDiscount();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void viewUserShActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewUserShActionPerformed
        // TODO add your handling code here:
        String id = getUserId((String)userCombobox.getSelectedItem());
        System.out.println("GET PRODUCTS BYING BY USER TO ID ="+id);
        getProductsByUserId(id);
    }//GEN-LAST:event_viewUserShActionPerformed

    private void RefreshUsersInComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshUsersInComboActionPerformed
        // TODO add your handling code here:
        userCombobox.removeAllItems();
        setUserInCombo();
    }//GEN-LAST:event_RefreshUsersInComboActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "CourseWork by Pavel Ushanli.","About", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want realy exit?", "title",dialogButton);
        if(dialogResult==0){
            System.out.println("By");
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

        private String getUserId(String login){
            DataBase db = new DataBase();
            Statement statement;
            try{
                String query ="SELECT user_id FROM users WHERE login ='"+login+"';";
                Connection con = db.getConnection();
                statement = con.createStatement();
                ResultSet rs = statement.executeQuery(query);
                rs.next();
                String userId = rs.getString("user_id");
                return userId;


            }catch(Exception e){
                System.err.println("getName Exception: "+e);
                return "";
            }
    }
    private void getProductsByUserId(String id){
        try{
            DataBase db = new DataBase();
            Connection con = db.getConnection();
            Statement statement = con.createStatement();
            String query ="SELECT * FROM  `product-user` WHERE user_id="+id+";";
            ResultSet rs = statement.executeQuery(query);
            String p_id= new String("");
            int i =0;
            while(rs.next()){
                if(i!=0){
                    p_id = p_id + " OR p_id="+rs.getInt("p_id");
                    i++;
                }else{
                    p_id = "p_id="+rs.getInt("p_id");
                    i++;
                }
            }
            System.out.println("User id "+id);
            System.out.println("Sys: "+p_id);
            if(p_id.equals("")){
                JOptionPane.showMessageDialog(this, "Empty","Title", JOptionPane.INFORMATION_MESSAGE);
            }else{
                query ="SELECT * FROM products WHERE "+p_id+";";
                statement = con.createStatement();
                rs = statement.executeQuery(query);

                DefaultTableModel tm = (DefaultTableModel) shipingTable.getModel();

                while(rs.next()){
                    String user = rs.getString("p_id")+" "+rs.getString("product_name")+" "+rs.getString("brand")+" "+rs.getString("model")+" "+rs.getString("quality")+" "+rs.getString("available")+" "+rs.getString("price");

                    tm.addRow(new Object[] {new Integer(rs.getInt("p_id")),
                        new String(rs.getString("product_name")),
                        new String(rs.getString("brand")),
                        new String(rs.getString("model")),
                        new String(rs.getString("quality")),
                        new Double(rs.getDouble("price")),
                        new Integer(rs.getInt("available")),
                        new Boolean(false)});

                }
            }
            
        }catch(Exception e){
            System.err.println(e);
        }
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RefreshUsersInCombo;
    private javax.swing.JMenu about;
    private javax.swing.JButton addUserButton;
    private javax.swing.JTable discountTable;
    private javax.swing.JButton editProductButton;
    private javax.swing.JButton editUserButton;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JTable productTable;
    private javax.swing.JButton refreshDiscounts;
    private javax.swing.JButton refreshProductsButton;
    private javax.swing.JButton refreshUserButton;
    private javax.swing.JButton removeDiscount;
    private javax.swing.JButton removeProductButton;
    private javax.swing.JButton removeUserButton;
    private javax.swing.JLabel serverStatus;
    private javax.swing.JTable shipingTable;
    private javax.swing.JButton startButton;
    private javax.swing.JComboBox userCombobox;
    private javax.swing.JTable userTable;
    private javax.swing.JButton viewUserSh;
    // End of variables declaration//GEN-END:variables
}
