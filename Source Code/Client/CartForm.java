/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ClientEditor;

import java.awt.Color;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author kalpak44
 */
public class CartForm extends javax.swing.JFrame {
    private ObjectOutputStream oos;
    private ObjectInputStream ois;
    
    private List<String[]> pData ;

    
    public CartForm(ServerData sData, List cart) {
        
        this.oos = sData.getOOS();
        this.ois = sData.getOIS();       
        
        initComponents();
        setVisible(true);
        getProducts(cart);
        
        
    }
    private void buyProducts(){
        if(!pData.isEmpty()){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want buy this products?", "title",dialogButton);
            if(dialogResult==0){
                try {
                        //check cart
                        oos.writeObject(new Integer(9));
                        oos.flush();
                        
                        
                        
                        DefaultTableModel tm = (DefaultTableModel) cartTable.getModel();
                        int cart[][] = new int[2][(Integer)tm.getRowCount()];
                        
                        System.out.println((Integer)tm.getRowCount());
                        
                        
                
                } catch (Exception ex) {
                    System.err.println("GETPRODUCTEXEPTION "+ex);
                }
            }
        }
    }

    private void getProducts(List<Integer> pCart){
        if(!pCart.isEmpty()){
            try {
                System.out.println("\nTRANSMITE: WANT PRODUCT WHERE");
                
                oos.writeObject(new Integer(8));
                oos.flush();
                
                
                for(int i=0;i<pCart.size();i++){           
                    System.out.println("ID = "+pCart.get(i));
                }
                
                oos.writeObject(pCart);
                oos.flush();
                
                pCart.clear();
                
                //this.pData = (List)ois.readObject();
                /*
                DefaultTableModel tm = (DefaultTableModel) cartTable.getModel();
                tm.setRowCount(0);
                System.out.println("GET FROM SERVER:");
                
                
                
                
                for(int i=0;i<pData.size();i++){
                    tm.addRow(new Object[] {new Integer(1),new Integer(Integer.parseInt(pData.get(i)[0])),new String(pData.get(i)[1]),new String(pData.get(i)[2]),new String(pData.get(i)[3]),new String(pData.get(i)[4]),new Integer(Integer.parseInt(pData.get(i)[5])),new Double(Double.parseDouble(pData.get(i)[6])),new Boolean(false)});
                    System.out.println(pData.get(i)[0]+" "+ pData.get(i)[1]+" "+pData.get(i)[2]+" "+pData.get(i)[3]+" "+pData.get(i)[4]+" "+pData.get(i)[5]+" "+pData.get(i)[6]);
                }
                */
                
            } catch (Exception ex) {
                System.err.println("GETPRODUCTEXEPTION "+ex);
            }
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        buyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("my Cart");

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numbers", "ID", "Name", "Brand", "Model", "Quality", "Available", "Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cartTable);

        buyButton.setText("Buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buyButton)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        // TODO add your handling code here:
        buyProducts();
    }//GEN-LAST:event_buyButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buyButton;
    private javax.swing.JTable cartTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
